generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String
  password    String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  
  // Relations
  tasks       Task[]
  categories  Category[]
  
  @@map("users")
}

model Category {
  id        String   @id @default(cuid())
  name      String
  color     String   @default("#3B82F6")
  userId    String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  // Relations
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks     Task[]
  
  @@map("categories")
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

model Task {
  id          String     @id @default(cuid())
  title       String
  description String?
  dueDate     DateTime?  @map("due_date")
  status      TaskStatus @default(PENDING)
  userId      String     @map("user_id")
  categoryId  String?    @map("category_id")
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")
  
  // Relations
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    Category?  @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  
  @@map("tasks")
}